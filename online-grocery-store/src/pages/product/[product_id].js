import { useState, useEffect } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  Box,
  Grid,
  Image,
  Text,
  NumberFormatter,
  Button,
  Flex,
  Divider,
  Badge,
} from "@mantine/core";
import { useCart } from "../../store/store";
import { Rating } from "@mantine/core";
import { NEXT_PUBLIC_HOST } from "@/env/env";

const ProductPage = () => {
  const addProduct = useCart((state) => state.addProduct);
  const cart = useCart((state) => state.cart);
  const [quantity, setQuantity] = useState(0);
  const [product, setProduct] = useState();
  const router = useRouter();
  const isInStock = !!product ? product.in_stock > 0 : false;
  const { product_id } = router.query;
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch(
          `${NEXT_PUBLIC_HOST}/api/getProduct?product_id=${product_id}`,
        );
        const product = await response.json();
        setProduct(product);
      } catch (error) {
        console.error(error);
      }
    };
    fetchData();
  }, [router.query, product_id]);

  const decreaseQuantity = () => {
    setQuantity((prevQuantity) => (prevQuantity > 0 ? prevQuantity - 1 : 0));
  };

  const increaseQuantity = () => {
    setQuantity((prevQuantity) => prevQuantity + 1);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="Logo.jpg" />
      </Head>
      {!!product ? (
        <Grid>
          <Grid.Col span={1}></Grid.Col>
          <Grid.Col span={3}>
            <Image
              alt={product.product_name}
              src={"/product-img/" + product.product_id + ".jpg"}
              height={260}
              fit="contain"
            />
          </Grid.Col>
          <Grid.Col span={4}>
            <h1>
              <Text fw={500}>
                {product.product_name} {" ("}
                {product.unit_quantity}
                {")"}
              </Text>
              <Rating value={3.5} fractions={2} readOnly />
            </h1>
            <Text>
              <p style={{ textDecoration: "underline" }}>Price/unit</p>
              <h1>
                <NumberFormatter
                  prefix="$"
                  value={product.unit_price}
                  thousandSeparator
                />
              </h1>
            </Text>
            <Text size="lg" my="lg">
              Available in-stock: {product.in_stock}
              <p></p>
              <Badge color={product.in_stock > 0 ? "blue" : "gray"}>
                {product.in_stock > 0 ? "In Stock" : "Out of Stock"}
              </Badge>
            </Text>
            <Text size="lg" my="lg">
              Input item quantity
            </Text>
            <Flex align="center">
              <Button
                size="sm"
                onClick={decreaseQuantity}
                mr="lg"
                style={{
                  backgroundColor: quantity === 0 ? "#DCDFE1" : "#50BEFE",
                }}
                disabled={quantity === 0}
              >
                -
              </Button>
              {quantity}
              <Button
                size="sm"
                onClick={() => increaseQuantity()}
                ml="lg"
                style={{ backgroundColor: "#50BEFE" }}
              >
                +
              </Button>
            </Flex>

            <Text size="sm" c="dimmed">
              <p style={{ textDecoration: "underline" }}>Description</p>
              {product.description}
            </Text>
          </Grid.Col>
          <Grid.Col
            span={3}
            style={{
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
            }}
          >
            <Box my="xl">
              <Text size="lg" my="lg">
                Total Price
              </Text>
              <h3>
                <NumberFormatter
                  prefix="$"
                  value={(quantity * product.unit_price).toFixed(2)}
                  thousandSeparator
                />
              </h3>
              <Divider my="md" />
              <Flex direction="column">
                <Button
                  bg={quantity === 0 ? "#DCDFE1" : "green"}
                  my="md"
                  size="lg"
                  onClick={() => {
                    addProduct(product, quantity);
                  }}
                  disabled={quantity === 0}
                >
                  Add to cart
                </Button>

                <Button
                  bg="red.5"
                  my="xl"
                  size="lg"
                  onClick={() => router.push("/shoppingcart")}
                >
                  Check Out
                </Button>
              </Flex>
            </Box>
          </Grid.Col>
          <Grid.Col span={1}></Grid.Col>
        </Grid>
      ) : null}
    </>
  );
};
export default ProductPage;
